version: 2.0
jobs:
  js_scss_linting:
    docker:
      - image: cimg/node:14.10.1
    steps:
      - checkout
      - run: npm install
      - run: npx grunt test
  php_testing:
    docker:
      - image: cimg/php:7.4.14
      - image: circleci/mysql:8.0.16
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: "root"
          MYSQL_DATABASE: wordpress_test
    working_directory: ~/php
    steps:
      - checkout
      - restore_cache:
          key: -v1-deps{{checksum "composer.lock"}}
      - run: composer install
      - save_cache:
          key: -v1-deps{{checksum "composer.lock"}}
          paths:
            - vendor
      - run:
          # The primary container isn't MYSQL, running a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI
          command: |
            sudo apt update
            sudo apt-get install mysql-client
      - run:
          name: Setup PHPUnit
          command: sudo bash ./scripts/setup-phpunit-ci.sh
      - run:
          name: Functional PHPUnit tests
          command: ./vendor/bin/phpunit
      - run:
          name: PHP linting
          command: composer phpcs
  cypress_tests:
    machine:
      image: ubuntu-2004:202008-01
    working_directory: /home/circleci/project/coil-wordpress-plugin
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup wordpress infrastructure
          command: |
            cd /home/circleci/project/coil-wordpress-plugin/tests/ci
            mkdir wordpress
            chmod 777 wordpress
            docker-compose up -d db
            sleep 5
            docker-compose up -d wordpress
            sleep 10
      - run:
          name: Installing and activating WordPress and the plugins
          command: |
            cd /home/circleci/project/coil-wordpress-plugin/tests/ci
            docker-compose run wordpress-cli wp core install --url="http://wordpress" --title=wordpress --admin_user=admin --admin_password=password --admin_email=admin@example.com --skip-email
            docker-compose run wordpress-cli wp plugin install wordpress-importer --activate
            sudo rsync -av --exclude='coil-wordpress-plugin/tests/ci' /home/circleci/project/coil-wordpress-plugin wordpress/wp-content/plugins/
            docker-compose run wordpress-cli wp plugin activate coil-wordpress-plugin
      - run:
          name: Build Cypress container
          command: |
            cd /home/circleci/project/coil-wordpress-plugin/tests/ci
            docker-compose build tester
      - run:
          name: Run Cypress tests
          command: |
            cd /home/circleci/project/coil-wordpress-plugin/tests/ci
            docker-compose run tester --project /var/www/html/wp-content/plugins/coil-wordpress-plugin/tests --config baseUrl="http://wordpress:80/" --record --key=$CYPRESS_PROJECT_KEY
  build_step:
    docker:
      - image: cimg/node:14.10.1
    working_directory: /home/circleci/project/coil-wordpress-plugin
    steps:
      - checkout
      - run: npm install
      - run: npm run build
      - run: npx grunt build
      - persist_to_workspace:
          root: .
          paths:
            - .
  bundle:
    docker:
      - image: cimg/base:2021.04
    working_directory: /home/circleci/project/coil-wordpress-plugin
    steps:
      - attach_workspace:
          at: .
      - run: rm -r node_modules tests scripts .circleci ./assets/scss
      - run: sudo rm -r .git
      - run: rm ./assets/css/admin/coil.css ./assets/css/frontend/coil.css ./assets/css/messages/coil.css ./src
      - run: rm ./assets/js/initialize-monetization.js ./assets/js/admin/admin-notices.js
      - run: rm .editorconfig .eslintignore .eslintrc.json .gitattributes .gitignore .stylelintrc.json composer.json composer.lock Gruntfile.js package-lock.json package.json phpcs.xml.dist phpunit.xml.dist README.md yarn.lock
      - run: zip -r /home/circleci/coil-web-monetization-plugin.zip .
      - store_artifacts:
          path: /home/circleci/coil-web-monetization-plugin.zip
workflows:
  version: 2
  test-and-build:
    jobs:
      - php_testing
      - js_scss_linting:
          filters:
            tags:
              only: /^v.*/
      - build_step:
          filters:
            tags:
              only: /^v.*/
      - cypress_tests:
          requires:
            - build_step
            - php_testing
          filters:
            tags:
              only: /^v.*/
      - bundle:
          requires:
            - build_step
            - js_scss_linting
            - cypress_tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
